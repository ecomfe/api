Ext.data.JsonP.TreeStrategy({"tagname":"class","name":"TreeStrategy","autodetected":{},"files":[{"filename":"TreeStrategy.js","href":"TreeStrategy.html#TreeStrategy"}],"params":[{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>初始化参数</p>\n","properties":[{"tagname":"params","type":"boolean","name":"defaultExpand","default":"false","optional":true,"doc":"<p>节点是否展开</p>\n","html_type":"boolean"}],"html_type":"Object"}],"members":[{"name":"constructor","tagname":"method","owner":"TreeStrategy","id":"method-constructor","meta":{}},{"name":"attachTo","tagname":"method","owner":"TreeStrategy","id":"method-attachTo","meta":{}},{"name":"enableSelectStrategy","tagname":"method","owner":"TreeStrategy","id":"method-enableSelectStrategy","meta":{"protected":true}},{"name":"enableToggleStrategy","tagname":"method","owner":"TreeStrategy","id":"method-enableToggleStrategy","meta":{"protected":true}},{"name":"isLeafNode","tagname":"method","owner":"TreeStrategy","id":"method-isLeafNode","meta":{}},{"name":"shouldExpand","tagname":"method","owner":"TreeStrategy","id":"method-shouldExpand","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-TreeStrategy","short_doc":"树的数据交互策略\n\n在ESUI中，Tree控件本身并不处理节点的展开、收起等工作，\n此项设计源于树的交互通常随业务的逻辑有很多的变化，如：\n\n\n是否远程加载数据，延迟加载数据\n展开与否和权限相关\n节点是否有禁用之类的状态\n\n\n\n因此，...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/TreeStrategy.html#TreeStrategy' target='_blank'>TreeStrategy.js</a></div></pre><div class='doc-contents'><p>树的数据交互策略</p>\n\n<p>在ESUI中，<a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a>控件本身并不处理节点的展开、收起等工作，\n此项设计源于树的交互通常随业务的逻辑有很多的变化，如：</p>\n\n<ul>\n<li>是否远程加载数据，延迟加载数据</li>\n<li>展开与否和权限相关</li>\n<li>节点是否有禁用之类的状态</li>\n</ul>\n\n\n<p>因此，在ESUI的设计中，当点击<a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a>的节点时，控件只触发\n<a href=\"#!/api/Tree-event-expand\" rel=\"Tree-event-expand\" class=\"docClass\">Tree.expand</a>或<a href=\"#!/api/Tree-event-collapse\" rel=\"Tree-event-collapse\" class=\"docClass\">Tree.collapse</a>事件，\n以及<a href=\"#!/api/Tree-event-select\" rel=\"Tree-event-select\" class=\"docClass\">Tree.select</a>和<a href=\"#!/api/Tree-event-unselect\" rel=\"Tree-event-unselect\" class=\"docClass\">Tree.unselect</a>事件，本身不做任何改变。</p>\n\n<p>而这两个事件将由关联在控件上的<a href=\"#!/api/Tree-property-strategy\" rel=\"Tree-property-strategy\" class=\"docClass\">Tree.strategy</a>对象来接收，\n<code>TreeStrategy</code>将根据自身的逻辑来决定是否进行对应的修改。</p>\n\n<p><code>TreeStrategy</code>类是对树的数据交互的策略的抽象，其包含以下方法：</p>\n\n<p><code>{boolean} isLeafNode({<a href=\"#!/api/meta.TreeItem\" rel=\"meta.TreeItem\" class=\"docClass\">meta.TreeItem</a>} node)</code>：判断一个节点是否为叶子，\n树对叶子节点的展现样式是特殊的\n<code>{boolean} shouldExpand({<a href=\"#!/api/meta.TreeItem\" rel=\"meta.TreeItem\" class=\"docClass\">meta.TreeItem</a>} node)</code>：判断一个节点是否应展开，\n当树渲染一个节点时会调用此方法。如果需要展开，则会进一步渲染其children属性\n<code>{void} attachTo({Tree} tree)</code>：绑定到对应的控件上，使当前策略生效</p>\n\n<p>如果根据业务实现一个策略类，则通常来说，<code>attachTo</code>方法需注册\n<a href=\"#!/api/Tree-event-expand\" rel=\"Tree-event-expand\" class=\"docClass\">Tree.expand</a>和<a href=\"#!/api/Tree-event-collapse\" rel=\"Tree-event-collapse\" class=\"docClass\">Tree.collapse</a>事件，\n在事件的处理函数中获取数据，并调用<a href=\"#!/api/Tree-method-expandNode\" rel=\"Tree-method-expandNode\" class=\"docClass\">Tree.expandNode</a>\n和<a href=\"#!/api/Tree-method-collapseNode\" rel=\"Tree-method-collapseNode\" class=\"docClass\">Tree.collapseNode</a>来使树得到正确的交互</p>\n\n<p>当<a href=\"#!/api/Tree-event-collapse\" rel=\"Tree-event-collapse\" class=\"docClass\">Tree.collapse</a>事件发生时，通常简单地调用\n<a href=\"#!/api/Tree-method-collapseNode\" rel=\"Tree-method-collapseNode\" class=\"docClass\">Tree.collapseNode</a>方法收起节点即可，\n需要时可以通过<a href=\"#!/api/Tree-method-collapseNode\" rel=\"Tree-method-collapseNode\" class=\"docClass\">Tree.collapseNode</a>方法的<code>removeChild</code>参数设为<code>true</code>，\n控制子节点的删除以回收内存和提高性能</p>\n\n<p>当<a href=\"#!/api/Tree-event-expand\" rel=\"Tree-event-expand\" class=\"docClass\">Tree.expand</a>事件发生时，需要根据数据的获取方案来提供不同的逻辑：</p>\n\n<ul>\n<li>如果数据是静态的，则直接调用<a href=\"#!/api/Tree-method-expandNode\" rel=\"Tree-method-expandNode\" class=\"docClass\">Tree.expandNode</a>，\n不传递<code>children</code>参数，由控件自动查找数据并生成子节点</li>\n<li>如果数据是远程加载的，则：\n\n<ul>\n<li>调用<a href=\"#!/api/Tree-method-indicateNodeLoading\" rel=\"Tree-method-indicateNodeLoading\" class=\"docClass\">Tree.indicateNodeLoading</a>方法，使节点进入加载状态</li>\n<li>通过<code>XMLHttpRequest</code>等手段加载远程数据，\n在收到数据后调用<a href=\"#!/api/Tree-method-expandNode\" rel=\"Tree-method-expandNode\" class=\"docClass\">Tree.expandNode</a>并传递<code>children</code>参数展开节点。\n注意在调用<a href=\"#!/api/Tree-method-expandNode\" rel=\"Tree-method-expandNode\" class=\"docClass\">Tree.expandNode</a>时，如果提供了<code>children</code>参数，\n则<a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a>控件会将提供的参数作为该节点的<code>children</code>属性保存，\n因此下一次调用时不再需要传递该参数</li>\n</ul>\n</li>\n</ul>\n\n\n<p>总结一下，通常来说，一个策略主要的任务是：</p>\n\n<ul>\n<li>注册<a href=\"#!/api/Tree-event-expand\" rel=\"Tree-event-expand\" class=\"docClass\">Tree.expand</a>及<a href=\"#!/api/Tree-event-collapse\" rel=\"Tree-event-collapse\" class=\"docClass\">Tree.collapse</a>事件，\n当事件触发时，根据逻辑来调用<a href=\"#!/api/Tree-method-expandNode\" rel=\"Tree-method-expandNode\" class=\"docClass\">Tree.expandNode</a>\n或<a href=\"#!/api/Tree-method-collapseNode\" rel=\"Tree-method-collapseNode\" class=\"docClass\">Tree.collapseNode</a>方法，或者不做任何行为</li>\n<li>注册<a href=\"#!/api/Tree-event-select\" rel=\"Tree-event-select\" class=\"docClass\">Tree.select</a>及<a href=\"#!/api/Tree-event-unselect\" rel=\"Tree-event-unselect\" class=\"docClass\">Tree.unselect</a>事件，\n当事件触发时，根据逻辑来调用<a href=\"#!/api/Tree-method-selectNode\" rel=\"Tree-method-selectNode\" class=\"docClass\">Tree.selectNode</a>\n或<a href=\"#!/api/Tree-method-unselectNode\" rel=\"Tree-method-unselectNode\" class=\"docClass\">Tree.unselectNode</a>方法，或者不做任何行为</li>\n</ul>\n\n\n<p>默认的<code>TreeStrategy</code>控件实现事件与方法的直接对接，中间不包含任何分支逻辑。\n具体业务可通过继承此类，并将实例在初始化时传递给<a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a>控件来控制树的行为</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>初始化参数</p>\n<ul><li><span class='pre'>defaultExpand</span> : boolean (optional)<div class='sub-desc'><p>节点是否展开</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/TreeStrategy-method-constructor' class='name expandable'>TreeStrategy</a>( <span class='pre'></span> ) : <a href=\"#!/api/TreeStrategy\" rel=\"TreeStrategy\" class=\"docClass\">TreeStrategy</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/TreeStrategy\" rel=\"TreeStrategy\" class=\"docClass\">TreeStrategy</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-attachTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-attachTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TreeStrategy-method-attachTo' class='name expandable'>attachTo</a>( <span class='pre'>tree</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>将当前策略依附到控件上 ...</div><div class='long'><p>将当前策略依附到控件上</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tree</span> : <a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a><div class='sub-desc'><p>控件实例</p>\n</div></li></ul></div></div></div><div id='method-enableSelectStrategy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-enableSelectStrategy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TreeStrategy-method-enableSelectStrategy' class='name expandable'>enableSelectStrategy</a>( <span class='pre'>tree</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>开启选中/取消选中相关的策略 ...</div><div class='long'><p>开启选中/取消选中相关的策略</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tree</span> : <a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a><div class='sub-desc'><p>控件实例</p>\n</div></li></ul></div></div></div><div id='method-enableToggleStrategy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-enableToggleStrategy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TreeStrategy-method-enableToggleStrategy' class='name expandable'>enableToggleStrategy</a>( <span class='pre'>tree</span> )<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>开启展开/收起相关的策略 ...</div><div class='long'><p>开启展开/收起相关的策略</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tree</span> : <a href=\"#!/api/Tree\" rel=\"Tree\" class=\"docClass\">Tree</a><div class='sub-desc'><p>控件实例</p>\n</div></li></ul></div></div></div><div id='method-isLeafNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-isLeafNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TreeStrategy-method-isLeafNode' class='name expandable'>isLeafNode</a>( <span class='pre'>node</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>判断一个节点是否叶子节点 ...</div><div class='long'><p>判断一个节点是否叶子节点</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/meta.TreeItem\" rel=\"meta.TreeItem\" class=\"docClass\">meta.TreeItem</a><div class='sub-desc'><p>节点数据项</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-shouldExpand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='TreeStrategy'>TreeStrategy</span><br/><a href='source/TreeStrategy.html#TreeStrategy-method-shouldExpand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/TreeStrategy-method-shouldExpand' class='name expandable'>shouldExpand</a>( <span class='pre'>node</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>判断一个节点是否应该展开 ...</div><div class='long'><p>判断一个节点是否应该展开</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/meta.TreeItem\" rel=\"meta.TreeItem\" class=\"docClass\">meta.TreeItem</a><div class='sub-desc'><p>节点数据项</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});