Ext.data.JsonP.painters({"tagname":"class","name":"painters","autodetected":{},"files":[{"filename":"painters.js","href":"painters.html#painters"}],"singleton":true,"members":[{"name":"attribute","tagname":"method","owner":"painters","id":"method-attribute","meta":{}},{"name":"createRepaint","tagname":"method","owner":"painters","id":"method-createRepaint","meta":{}},{"name":"delegate","tagname":"method","owner":"painters","id":"method-delegate","meta":{}},{"name":"html","tagname":"method","owner":"painters","id":"method-html","meta":{}},{"name":"state","tagname":"method","owner":"painters","id":"method-state","meta":{}},{"name":"style","tagname":"method","owner":"painters","id":"method-style","meta":{}},{"name":"text","tagname":"method","owner":"painters","id":"method-text","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-painters","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/painters.html#painters' target='_blank'>painters.js</a></div></pre><div class='doc-contents'><p>渲染器模块，用于提供生成<code>painter</code>方法的工厂方法</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attribute' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-attribute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-attribute' class='name expandable'>attribute</a>( <span class='pre'>name, [attribute], [value]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将控件属性与控件主元素元素的属性关联的渲染器\n\n当控件属性变化时，将根据参数同步到主元素元素的属性上\n\n// 将target属性与&lt;a&gt;元素关联\nvar painter = painters.attribute('...</div><div class='long'><p>生成一个将控件属性与控件主元素元素的属性关联的渲染器</p>\n\n<p>当控件属性变化时，将根据参数同步到主元素元素的属性上</p>\n\n<pre class='inline-example '><code>// 将target属性与&lt;a&gt;元素关联\nvar painter = <a href=\"#!/api/painters-method-attribute\" rel=\"painters-method-attribute\" class=\"docClass\">painters.attribute</a>('target');\n\n// 可以选择关联到不同的DOM属性\nvar painter = <a href=\"#!/api/painters-method-attribute\" rel=\"painters-method-attribute\" class=\"docClass\">painters.attribute</a>('link', 'href');\n\n// 可以指定DOM属性的值\nvar painter = <a href=\"#!/api/painters-method-attribute\" rel=\"painters-method-attribute\" class=\"docClass\">painters.attribute</a>('active', 'checked', true);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名</p>\n</div></li><li><span class='pre'>attribute</span> : string (optional)<div class='sub-desc'><p>对应DOM属性的名称，默认与<code>name</code>相同</p>\n</div></li><li><span class='pre'>value</span> : Mixed (optional)<div class='sub-desc'><p>固定DOM属性的值，默认与更新的值相同</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div><div id='method-createRepaint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-createRepaint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-createRepaint' class='name expandable'>createRepaint</a>( <span class='pre'>args</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>通过提供一系列painter对象创建repaint方法\n\n本方法接受以下2类作为“渲染器”：\n\n\n直接的函数对象\n一个painter对象\n\n\n\n当一个直接的函数对象作为“渲染器”时，会将changes和changesIndex两个参数...</div><div class='long'><p>通过提供一系列<code>painter</code>对象创建<code>repaint</code>方法</p>\n\n<p>本方法接受以下2类作为“渲染器”：</p>\n\n<ul>\n<li>直接的函数对象</li>\n<li>一个<code>painter</code>对象</li>\n</ul>\n\n\n<p>当一个直接的函数对象作为“渲染器”时，会将<code>changes</code>和<code>changesIndex</code>两个参数\n传递给该函数，函数具有最大的灵活度来自由操作控件</p>\n\n<p>一个<code>painter</code>对象必须包含以下属性：</p>\n\n<ul>\n<li><code>{string | string[]} name</code>：指定这个<code>painter</code>对应的属性或属性集合</li>\n<li><code>{Function} paint</code>：指定渲染的函数</li>\n</ul>\n\n\n<p>一个<code>painter</code>在执行时，其<code>paint</code>函数将接受以下参数：</p>\n\n<ul>\n<li><code>{Control} control</code>：当前的控件实例</li>\n<li><code>{Mixed} args...</code>：根据<code>name</code>配置指定的属性，依次将属性的最新值作为参数</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object... | Function...<div class='sub-desc'><p><code>painter</code>对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p><code>repaint</code>方法的实现</p>\n</div></li></ul></div></div></div><div id='method-delegate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-delegate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-delegate' class='name expandable'>delegate</a>( <span class='pre'>name, member, method</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将控件属性的变化代理到指定成员的指定方法上 ...</div><div class='long'><p>生成一个将控件属性的变化代理到指定成员的指定方法上</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名</p>\n</div></li><li><span class='pre'>member</span> : string<div class='sub-desc'><p>指定成员名</p>\n</div></li><li><span class='pre'>method</span> : string<div class='sub-desc'><p>指定调用的方法名称</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div><div id='method-html' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-html' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-html' class='name expandable'>html</a>( <span class='pre'>name, [element], [generate]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将控件属性与某个DOM元素的HTML内容关联的渲染器\n\n当控件属性变化时，对应修改DOM元素的innerHTML ...</div><div class='long'><p>生成一个将控件属性与某个DOM元素的HTML内容关联的渲染器</p>\n\n<p>当控件属性变化时，对应修改DOM元素的<code>innerHTML</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名</p>\n</div></li><li><span class='pre'>element</span> : string | Function (optional)<div class='sub-desc'><p>指定DOM元素在当前控件下的部分名，\n可以提供函数作为参数，则函数返回需要更新的DOM元素</p>\n</div></li><li><span class='pre'>generate</span> : Function (optional)<div class='sub-desc'><p>指定生成HTML的函数，默认直接使用控件属性的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div><div id='method-state' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-state' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-state' class='name expandable'>state</a>( <span class='pre'>name</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将属性与控件状态关联的渲染器\n\n当属性变为true的时候使用addState添加状态，反之使用removeState移除状态 ...</div><div class='long'><p>生成一个将属性与控件状态关联的渲染器</p>\n\n<p>当属性变为<code>true</code>的时候使用<code>addState</code>添加状态，反之使用<code>removeState</code>移除状态</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名，同时也是状态名称</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div><div id='method-style' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-style' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-style' class='name expandable'>style</a>( <span class='pre'>name, [property]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将控件属性与控件主元素元素的样式关联的渲染器\n\n当控件属性变化时，将根据参数同步到主元素元素的样式上 ...</div><div class='long'><p>生成一个将控件属性与控件主元素元素的样式关联的渲染器</p>\n\n<p>当控件属性变化时，将根据参数同步到主元素元素的样式上</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名</p>\n</div></li><li><span class='pre'>property</span> : string (optional)<div class='sub-desc'><p>对应的样式属性名，默认与<code>name</code>相同</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div><div id='method-text' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='painters'>painters</span><br/><a href='source/painters.html#painters-method-text' target='_blank' class='view-source'>view source</a></div><a href='#!/api/painters-method-text' class='name expandable'>text</a>( <span class='pre'>name, [element], [generate]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>生成一个将控件属性与某个DOM元素的HTML内容关联的渲染器\n\n当控件属性变化时，对应修改DOM元素的文本内容\n\n本方法与html相似，区别在于会将内容进行一次HTML转义 ...</div><div class='long'><p>生成一个将控件属性与某个DOM元素的HTML内容关联的渲染器</p>\n\n<p>当控件属性变化时，对应修改DOM元素的文本内容</p>\n\n<p>本方法与<a href=\"#!/api/painters-method-html\" rel=\"painters-method-html\" class=\"docClass\">html</a>相似，区别在于会将内容进行一次HTML转义</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : string<div class='sub-desc'><p>指定负责的属性名</p>\n</div></li><li><span class='pre'>element</span> : string | Function (optional)<div class='sub-desc'><p>指定DOM元素在当前控件下的部分名，\n可以提供函数作为参数，则函数返回需要更新的DOM元素</p>\n</div></li><li><span class='pre'>generate</span> : Function (optional)<div class='sub-desc'><p>指定生成HTML的函数，默认直接使用控件属性的值，\n该函数返回原始的HTML，不需要做额外的转义工作</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>一个渲染器配置</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});